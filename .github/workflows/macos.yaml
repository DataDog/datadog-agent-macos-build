name: MacOS Agent build

on:
  workflow_dispatch:
    inputs:
      datadog_agent_ref:
        description: 'git ref to target on datadog-agent'
        required: false
        default: 'master'
      release_version:
        description: 'release.json version to target'
        required: false
        default: 'nightly-a7'
      agent_major_version:
        description: 'Major version of the Agent to build'
        required: false
        default: '7'
      python_runtimes:
        description: 'Included python runtimes in the build'
        required: false
        default: '3'

jobs:
  macos_build:
    runs-on: macos-10.15
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Choose XCode 11.7
      run: |
        sudo xcode-select -s /Applications/Xcode_11.7.app

    - name: Remove preinstalled brew packages
      run: |
        # The base box ships a few things that can have unwanted effects on the MacOS build.
        # For instance, we compile Python in the pipeline. If Python finds some libraries while
        # it's being compiled, then it will add a dynamic link to them and add some features.
        # In this particular case, Python sees that there is libintl.8.dylib (provided by the gettext brew package)
        # in the default include path, thus links to it. However, that's not something we need, so we don't actually
        # ship that library in the MacOS package. Since we have a feature to make a build fail if we depend on
        # something we don't ship, this made the build fail (see: https://github.com/DataDog/datadog-agent-macos-build/runs/1011733463?check_suite_focus=true).

        # In order to avoid such cases in the future where we use things we didn't expect to, we'd rather
        # start with a "clean" runner with the bare minimum, and only install the brew packages we require.
        brew remove --force $(brew list)

    - name: Cache brew deps
      uses: actions/cache@v2
      with:
        # Paths to cache:
        # /usr/local/Homebrew - installation folder of Homebrew
        # /usr/local/Cellar - installation folder of Homebrew formulae
        # /usr/local/Frameworks, /usr/local/bin, /usr/local/opt - contain (links to) binaries installed by Homebrew formulae
        # /usr/local/lib/python3.8 - Python3 packages installation
        path: |
          /usr/local/Homebrew
          /usr/local/Cellar
          /usr/local/Frameworks
          /usr/local/bin
          /usr/local/opt
          /usr/local/lib/python3.8
        key: macos-build-cache-${{ hashFiles('./datadog-agent-buildimages/macos/builder_setup.sh') }}

    - name: Set up builder
      run: |
        bash ./datadog-agent-buildimages/macos/builder_setup.sh

    - name: Prep repo
      run: |
        source ~/.build_setup

        go get github.com/DataDog/datadog-agent || true
        cd $GOPATH/src/github.com/Datadog/datadog-agent
        git checkout ff5694619fffeaeb8f9d06eccb724e88a67065c4

    - name: Install python deps & clang-format
      run: |
        source ~/.build_setup
        cd $GOPATH/src/github.com/Datadog/datadog-agent
        brew install clang-format
        python3 -m pip install -r requirements.txt

    - name: Compile rtloader
      run: |
        source ~/.build_setup
        cd $GOPATH/src/github.com/Datadog/datadog-agent
        inv rtloader.make --install-prefix=$GOPATH/src/github.com/DataDog/datadog-agent/dev
        inv rtloader.install

    - name: Lint rtloader
      run: |
        source ~/.build_setup
        cd $GOPATH/src/github.com/Datadog/datadog-agent
        inv rtloader.format --raise-if-changed

    - name: Test rtloader
      run: |
        source ~/.build_setup
        cd $GOPATH/src/github.com/Datadog/datadog-agent
        inv rtloader.test

    - name: Run tests
      run: |
        source ~/.build_setup
        cd $GOPATH/src/github.com/Datadog/datadog-agent
        inv -e deps
        inv -e test --python-runtimes 3 --coverage --race --profile --fail-on-fmt --cpus 3
